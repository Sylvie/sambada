name: Sambada Build

on: [ push, pull_request ]

env:
  CC: gcc-11
  CXX: g++-11

jobs:
  workflow-params:
    name: Determining workflow params
    runs-on: ubuntu-latest
    outputs:
      version-number: ${{ steps.version-number.outputs.sambada_version }}
    steps:
      - name: Greetings
        run: |
          echo "Hello!"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: determine version number
        id: version-number
        run: |
          sambada_version=$(./git-version-gen .version)
          echo ${sambada_version}
          echo '::set-output name=sambada_version::${sambada_version}'

  read-params:
    name: Reading workflow params
    runs-on: ubuntu-latest
    needs: workflow-params
    env:
      sambada_version: ${{ needs.workflow-params.outputs.version-number }}

    steps:
      - name: Greetings
        run: |
          echo "Hello!"
          echo "Reading output: ${{ needs.workflow-params.outputs.version-number }}"
      - name: Read variables
        run: |
          echo "${sambada_version}"

  build:
    if: false
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: check environment
        run: |
          set -v
          ${CC} -v
          ${CXX} -v
          brew update
          brew install automake
      - name: configure
        run: |
          autoreconf -i
          mkdir build
          cd build
          ../configure --disable-manual
      - name: determine version number
        id: version-number
        run: |
          sambada_version=$(./git-version-gen .version)
          echo ${sambada_version}
          echo '::set-output name={sambada_version}::{${sambada_version}}'
          echo "sambada_version=${sambada_version}" >> $GITHUB_ENV
      - name: make
        env:
          sambada_version: ${{ steps.version-number.outputs.sambada_version }}
        run: |
          cd build
          make
      - name: make archive
        env:
          sambada_version: ${{ steps.version-number.outputs.sambada_version }}
        run: |
          cd build
          make binary-archive
          ls
      - name: upload archive
        uses: actions/upload-artifact@v2
        with:
          name: sambada-archive
          path: build/sambada-${{ env.sambada_version }}-OSX.tar.gz
      - name: make check
        run: |
          cd build
          make check
          cat test-suite.log
          binaries/sambada ../Data/Example_parameters_input_matrix.txt ../Data/input_matrix.csv
          binaries/sambada ../examples/data-from-manual/one-data-file/param-combo.txt ../examples/data-from-manual/one-data-file/combo-data.txt
      - name: make distcheck
        env:
          sambada_version: ${{ steps.version-number.outputs.sambada_version }}
        run: |
          mkdir distributionverification
          cd distributionverification
          ../configure --disable-manual
          make distcheck
