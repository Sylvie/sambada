name: Sambada Build

on: [ push, pull_request ]

env:
  CC: gcc-11
  CXX: g++-11

jobs:
  workflow-params:
    name: Determining workflow params
    runs-on: ubuntu-latest
    outputs:
      version-number: ${{ steps.version-number.outputs.sambada_version_number }}
    steps:
      - name: Greetings
        run: |
          echo "Hello!"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: determine version number
        id: version-number
        run: |
          sambada_version_number=$(./git-version-gen .version)
          echo ${sambada_version_number}
          echo "::set-output name=sambada_version_number::${sambada_version_number}"

  read-params:
    name: Reading workflow params
    runs-on: ubuntu-latest
    needs: workflow-params
    env:
      sambada_version_number: ${{ needs.workflow-params.outputs.version-number }}

    steps:
      - name: Greetings
        run: |
          echo "Hello!"
          echo "Reading output: ${{ needs.workflow-params.outputs.version-number }}"
      - name: Read variables
        run: |
          echo "${sambada_version_number}"

  build:
    runs-on: macos-10
    needs: workflow-params
    env:
      sambada_version_number: ${{ needs.workflow-params.outputs.version-number }}
    strategy:
      matrix:
        build-type: [ package, distcheck ]

    steps:
      - name: Checking out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Installing missing package
        run: |
          brew install automake

      - name: Configuring
        run: |
          autoreconf -i
          mkdir build
          cd build
          ../configure --disable-manual

      - name: Building
        env:
          sambada_version: ${{ steps.version-number.outputs.sambada_version }}
        run: |
          cd build
          make

      - name: Making archive
        if: ${{ matrix.build-type }} == "package"
        env:
          sambada_version: ${{ steps.version-number.outputs.sambada_version }}
        run: |
          cd build
          make binary-archive
          ls

      - name: Uploading archive
        if: ${{ matrix.build-type }} == "package"
        uses: actions/upload-artifact@v2
        with:
          name: sambada-archive-${{ runner.os }}
          path: build/sambada-${{ env.sambada_version_number }}-OSX.tar.gz
          if-no-files-found: error

      - name: Running check
        if: ${{ matrix.build-type }} == "package"
        run: |
          cd build
          make check
          cat test-suite.log
          binaries/sambada ../Data/Example_parameters_input_matrix.txt ../Data/input_matrix.csv
          binaries/sambada ../examples/data-from-manual/one-data-file/param-combo.txt ../examples/data-from-manual/one-data-file/combo-data.txt

      - name: Running distcheck
        if: ${{ matrix.build-type }} == "distcheck"
        env:
          sambada_version: ${{ steps.version-number.outputs.sambada_version }}
        run: |
          cd build
          make distcheck

  sambadoc:
    if: false
    name: Compiling Sambada's manual
    runs-on: ubuntu-latest
    needs: workflow-params
    env:
      sambada_version_number: ${{ needs.workflow-params.outputs.version-number }}
      CC: gcc-10
      CXX: g++-10

    steps:

      - name: Checking out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Installing missing package
        run: |
          brew install automake

      - name: Configuring build
        run: |
          autoreconf -i
          mkdir build
          cd build
          ../configure

      - name: Preparing LaTeX compilation
        run: |
          cd build
          make manual/latexmkrc

      - name: Compiling LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          root_file: manual.tex
          working_directory: build/manual/
          args: |
            -jobname=sambadoc

      - name: Uploading manual
        uses: actions/upload-artifact@v2
        with:
          name: sambadoc.pdf
          path: build/manual/sambadoc.pdf
          if-no-files-found: error
